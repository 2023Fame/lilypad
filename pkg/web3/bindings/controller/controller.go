// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package controller

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// SharedStructsAgreement is an auto generated low-level Go binding around an user-defined struct.
type SharedStructsAgreement struct {
	State                    uint8
	Mediator                 common.Address
	ResourceProviderAgreedAt *big.Int
	JobCreatorAgreedAt       *big.Int
	DealCreatedAt            *big.Int
	DealAgreedAt             *big.Int
	ResultsSubmittedAt       *big.Int
	ResultsAcceptedAt        *big.Int
	ResultsCheckedAt         *big.Int
	MediationAcceptedAt      *big.Int
	MediationRejectedAt      *big.Int
	TimeoutAgreeAt           *big.Int
	TimeoutSubmitResultsAt   *big.Int
	TimeoutJudgeResultsAt    *big.Int
	TimeoutMediateResultsAt  *big.Int
}

// SharedStructsDealMembers is an auto generated low-level Go binding around an user-defined struct.
type SharedStructsDealMembers struct {
	Solver           common.Address
	JobCreator       common.Address
	ResourceProvider common.Address
	Mediators        []common.Address
}

// SharedStructsDealPricing is an auto generated low-level Go binding around an user-defined struct.
type SharedStructsDealPricing struct {
	InstructionPrice          *big.Int
	PaymentCollateral         *big.Int
	ResultsCollateralMultiple *big.Int
	MediationFee              *big.Int
}

// SharedStructsDealTimeout is an auto generated low-level Go binding around an user-defined struct.
type SharedStructsDealTimeout struct {
	Timeout    *big.Int
	Collateral *big.Int
}

// SharedStructsDealTimeouts is an auto generated low-level Go binding around an user-defined struct.
type SharedStructsDealTimeouts struct {
	Agree          SharedStructsDealTimeout
	SubmitResults  SharedStructsDealTimeout
	JudgeResults   SharedStructsDealTimeout
	MediateResults SharedStructsDealTimeout
}

// ControllerMetaData contains all meta data concerning the Controller contract.
var ControllerMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dealId\",\"type\":\"uint256\"}],\"name\":\"acceptResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dealId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resultsId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"instructionCount\",\"type\":\"uint256\"}],\"name\":\"addResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dealId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"solver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"jobCreator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resourceProvider\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"mediators\",\"type\":\"address[]\"}],\"internalType\":\"structSharedStructs.DealMembers\",\"name\":\"members\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timeout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"internalType\":\"structSharedStructs.DealTimeout\",\"name\":\"agree\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timeout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"internalType\":\"structSharedStructs.DealTimeout\",\"name\":\"submitResults\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timeout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"internalType\":\"structSharedStructs.DealTimeout\",\"name\":\"judgeResults\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timeout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"internalType\":\"structSharedStructs.DealTimeout\",\"name\":\"mediateResults\",\"type\":\"tuple\"}],\"internalType\":\"structSharedStructs.DealTimeouts\",\"name\":\"timeouts\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"instructionPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resultsCollateralMultiple\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mediationFee\",\"type\":\"uint256\"}],\"internalType\":\"structSharedStructs.DealPricing\",\"name\":\"pricing\",\"type\":\"tuple\"}],\"name\":\"agree\",\"outputs\":[{\"components\":[{\"internalType\":\"enumSharedStructs.AgreementState\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"mediator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"resourceProviderAgreedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"jobCreatorAgreedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dealCreatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dealAgreedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resultsSubmittedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resultsAcceptedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resultsCheckedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mediationAcceptedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mediationRejectedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeoutAgreeAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeoutSubmitResultsAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeoutJudgeResultsAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeoutMediateResultsAt\",\"type\":\"uint256\"}],\"internalType\":\"structSharedStructs.Agreement\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dealId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"mediator\",\"type\":\"address\"}],\"name\":\"checkResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMediationAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPaymentsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUsersAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_storageAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_paymentsAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mediationAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dealId\",\"type\":\"uint256\"}],\"name\":\"mediationAcceptResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dealId\",\"type\":\"uint256\"}],\"name\":\"mediationRejectResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mediationAddress\",\"type\":\"address\"}],\"name\":\"setMediationAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_paymentsAddress\",\"type\":\"address\"}],\"name\":\"setPaymentsAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_storageAddress\",\"type\":\"address\"}],\"name\":\"setStorageAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usersAddress\",\"type\":\"address\"}],\"name\":\"setUsersAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dealId\",\"type\":\"uint256\"}],\"name\":\"timeoutAgree\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dealId\",\"type\":\"uint256\"}],\"name\":\"timeoutJudgeResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dealId\",\"type\":\"uint256\"}],\"name\":\"timeoutMediateResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dealId\",\"type\":\"uint256\"}],\"name\":\"timeoutSubmitResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x608060405234801562000010575f80fd5b5062000031620000256200003760201b60201c565b6200003e60201b60201c565b620000ff565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b615907806200010d5f395ff3fe608060405234801561000f575f80fd5b5060043610610140575f3560e01c80635a665355116100b65780638da5cb5b1161007a5780638da5cb5b1461030a57806393dbed3e14610328578063bbfff47d14610346578063c0c53b8b14610362578063d48b10841461037e578063f2fde38b1461039c57610140565b80635a6653551461027c5780635dd049fd146102ac578063640e570f146102c8578063715018a6146102e45780637fb9c45f146102ee57610140565b806335a7e2681161010857806335a7e268146101d2578063393a4d34146101ee57806343391cca1461020c5780635427856714610228578063546cfd341461024457806359b910d61461026057610140565b806311d6adc414610144578063155329ea14610160578063172257c71461017e57806323a9a8621461019a57806332ebea04146101b6575b5f80fd5b61015e6004803603810190610159919061394c565b6103b8565b005b610168610861565b60405161017591906139b6565b60405180910390f35b6101986004803603810190610193919061394c565b610889565b005b6101b460048036038101906101af919061394c565b610cf9565b005b6101d060048036038101906101cb919061394c565b611196565b005b6101ec60048036038101906101e7919061394c565b61154f565b005b6101f66119e2565b60405161020391906139b6565b60405180910390f35b610226600480360381019061022191906139f9565b611a0a565b005b610242600480360381019061023d919061394c565b611b03565b005b61025e60048036038101906102599190613a24565b611f52565b005b61027a600480360381019061027591906139f9565b61232b565b005b61029660048036038101906102919190613d95565b612445565b6040516102a39190613fdb565b60405180910390f35b6102c660048036038101906102c1919061394c565b6128ea565b005b6102e260048036038101906102dd91906139f9565b612ce7565b005b6102ec612de0565b005b61030860048036038101906103039190613ff5565b612df3565b005b6103126131a3565b60405161031f91906139b6565b60405180910390f35b6103306131ca565b60405161033d91906139b6565b60405180910390f35b610360600480360381019061035b91906139f9565b6131f2565b005b61037c60048036038101906103779190614033565b6132ab565b005b6103866133fe565b60405161039391906139b6565b60405180910390f35b6103b660048036038101906103b191906139f9565b613426565b005b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382fd5bac836040518263ffffffff1660e01b81526004016104139190614092565b5f604051808303815f875af115801561042e573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f8201168201806040525081019061045691906144aa565b90505f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634f9f6fe6846040518263ffffffff1660e01b81526004016104b39190614092565b6101e0604051808303815f875af11580156104d0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104f49190614675565b90503273ffffffffffffffffffffffffffffffffffffffff1682602001516020015173ffffffffffffffffffffffffffffffffffffffff16148061056b57503273ffffffffffffffffffffffffffffffffffffffff1682602001516040015173ffffffffffffffffffffffffffffffffffffffff16145b6105aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a1906146fb565b60405180910390fd5b5f600a8111156105bd576105bc613e17565b5b815f0151600a8111156105d3576105d2613e17565b5b14610613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060a90614763565b60405180910390fd5b81604001515f01515f0151816080015161062d91906147ae565b421161066e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106659061482b565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166311d6adc4846040518263ffffffff1660e01b81526004016106c89190614092565b5f604051808303815f87803b1580156106df575f80fd5b505af11580156106f1573d5f803e3d5ffd5b505050505f816040015111156107a55760065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663759a0f8084846020015160400151856040015160200151602001516040518463ffffffff1660e01b815260040161077393929190614849565b5f604051808303815f87803b15801561078a575f80fd5b505af115801561079c573d5f803e3d5ffd5b5050505061085c565b5f8160600151111561085b5760065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634a5d593d84846020015160200151856060015160200151866040015160200151602001516040518563ffffffff1660e01b815260040161082d949392919061487e565b5f604051808303815f87803b158015610844575f80fd5b505af1158015610856573d5f803e3d5ffd5b505050505b5b505050565b5f60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef816fd98260026040518363ffffffff1660e01b81526004016108e69291906148d0565b6020604051808303815f875af1158015610902573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610926919061492c565b610965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095c906149a1565b60405180910390fd5b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382fd5bac836040518263ffffffff1660e01b81526004016109c09190614092565b5f604051808303815f875af11580156109db573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f82011682018060405250810190610a0391906144aa565b90503273ffffffffffffffffffffffffffffffffffffffff1681602001516020015173ffffffffffffffffffffffffffffffffffffffff1614610a7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7290614a09565b60405180910390fd5b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630396e3c1846040518263ffffffff1660e01b8152600401610ad69190614092565b6020604051808303815f875af1158015610af2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b169190614a27565b90505f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d7455301856040518263ffffffff1660e01b8152600401610b739190614092565b6020604051808303815f875af1158015610b8f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bb39190614a27565b905060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663172257c7856040518263ffffffff1660e01b8152600401610c0f9190614092565b5f604051808303815f87803b158015610c26575f80fd5b505af1158015610c38573d5f803e3d5ffd5b5050505060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ec349598585602001516040015186602001516020015186886060015160200151878a6040015160400151602001516040518863ffffffff1660e01b8152600401610cc69796959493929190614a52565b5f604051808303815f87803b158015610cdd575f80fd5b505af1158015610cef573d5f803e3d5ffd5b5050505050505050565b610d016134a8565b73ffffffffffffffffffffffffffffffffffffffff1660045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8690614b09565b60405180910390fd5b610d98816134af565b610dd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dce90614b71565b60405180910390fd5b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382fd5bac836040518263ffffffff1660e01b8152600401610e329190614092565b5f604051808303815f875af1158015610e4d573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f82011682018060405250810190610e7591906144aa565b90505f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634f9f6fe6846040518263ffffffff1660e01b8152600401610ed29190614092565b6101e0604051808303815f875af1158015610eef573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f139190614675565b90505f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630396e3c1856040518263ffffffff1660e01b8152600401610f709190614092565b6020604051808303815f875af1158015610f8c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fb09190614a27565b90505f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d7455301866040518263ffffffff1660e01b815260040161100d9190614092565b6020604051808303815f875af1158015611029573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061104d9190614a27565b905060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323a9a862866040518263ffffffff1660e01b81526004016110a99190614092565b5f604051808303815f87803b1580156110c0575f80fd5b505af11580156110d2573d5f803e3d5ffd5b5050505060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e75b2d5e868660200151604001518760200151602001518760200151878a6060015160200151888c60600151606001516040518963ffffffff1660e01b8152600401611162989796959493929190614b8f565b5f604051808303815f87803b158015611179575f80fd5b505af115801561118b573d5f803e3d5ffd5b505050505050505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382fd5bac836040518263ffffffff1660e01b81526004016111f19190614092565b5f604051808303815f875af115801561120c573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f8201168201806040525081019061123491906144aa565b90505f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634f9f6fe6846040518263ffffffff1660e01b81526004016112919190614092565b6101e0604051808303815f875af11580156112ae573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112d29190614675565b90503273ffffffffffffffffffffffffffffffffffffffff1682602001516020015173ffffffffffffffffffffffffffffffffffffffff161461134a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134190614a09565b60405180910390fd5b6001600a81111561135e5761135d613e17565b5b815f0151600a81111561137457611373613e17565b5b146113b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ab90614763565b60405180910390fd5b8160400151602001515f01518160a001516113cf91906147ae565b4211611410576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114079061482b565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166332ebea04846040518263ffffffff1660e01b815260040161146a9190614092565b5f604051808303815f87803b158015611481575f80fd5b505af1158015611493573d5f803e3d5ffd5b5050505060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eb7e939484846020015160400151856020015160200151866060015160200151876040015160200151602001516040518663ffffffff1660e01b815260040161151d959493929190614c0b565b5f604051808303815f87803b158015611534575f80fd5b505af1158015611546573d5f803e3d5ffd5b50505050505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382fd5bac836040518263ffffffff1660e01b81526004016115aa9190614092565b5f604051808303815f875af11580156115c5573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906115ed91906144aa565b90505f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634f9f6fe6846040518263ffffffff1660e01b815260040161164a9190614092565b6101e0604051808303815f875af1158015611667573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061168b9190614675565b90503273ffffffffffffffffffffffffffffffffffffffff1682602001516040015173ffffffffffffffffffffffffffffffffffffffff16148061170257503273ffffffffffffffffffffffffffffffffffffffff1682602001516020015173ffffffffffffffffffffffffffffffffffffffff16145b611741576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173890614ca6565b60405180910390fd5b6004600a81111561175557611754613e17565b5b815f0151600a81111561176b5761176a613e17565b5b146117ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a290614763565b60405180910390fd5b8160400151604001515f01518160c001516117c691906147ae565b4211611807576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117fe9061482b565b60405180910390fd5b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d7455301856040518263ffffffff1660e01b81526004016118629190614092565b6020604051808303815f875af115801561187e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118a29190614a27565b905060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166335a7e268856040518263ffffffff1660e01b81526004016118fe9190614092565b5f604051808303815f87803b158015611915575f80fd5b505af1158015611927573d5f803e3d5ffd5b5050505060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd1e620185856020015160400151866020015160200151876060015160200151868960600151606001516040518763ffffffff1660e01b81526004016119af96959493929190614cc4565b5f604051808303815f87803b1580156119c6575f80fd5b505af11580156119d8573d5f803e3d5ffd5b5050505050505050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611a12613718565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7790614d6d565b60405180910390fd5b8060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382fd5bac836040518263ffffffff1660e01b8152600401611b5e9190614092565b5f604051808303815f875af1158015611b79573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f82011682018060405250810190611ba191906144aa565b90505f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634f9f6fe6846040518263ffffffff1660e01b8152600401611bfe9190614092565b6101e0604051808303815f875af1158015611c1b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c3f9190614675565b90503273ffffffffffffffffffffffffffffffffffffffff1682602001516040015173ffffffffffffffffffffffffffffffffffffffff1614611cb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cae90614dd5565b60405180910390fd5b6002600a811115611ccb57611cca613e17565b5b815f0151600a811115611ce157611ce0613e17565b5b14611d21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d1890614763565b60405180910390fd5b8160400151604001515f01518160c00151611d3c91906147ae565b4211611d7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d749061482b565b60405180910390fd5b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d7455301856040518263ffffffff1660e01b8152600401611dd89190614092565b6020604051808303815f875af1158015611df4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e189190614a27565b905060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354278567856040518263ffffffff1660e01b8152600401611e749190614092565b5f604051808303815f87803b158015611e8b575f80fd5b505af1158015611e9d573d5f803e3d5ffd5b5050505060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e511a478585602001516040015186602001516020015185886040015160400151602001516040518663ffffffff1660e01b8152600401611f1f959493929190614c0b565b5f604051808303815f87803b158015611f36575f80fd5b505af1158015611f48573d5f803e3d5ffd5b5050505050505050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef816fd98460016040518363ffffffff1660e01b8152600401611faf9291906148d0565b6020604051808303815f875af1158015611fcb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fef919061492c565b61202e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161202590614e3d565b60405180910390fd5b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382fd5bac856040518263ffffffff1660e01b81526004016120899190614092565b5f604051808303815f875af11580156120a4573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906120cc91906144aa565b90503273ffffffffffffffffffffffffffffffffffffffff1681602001516040015173ffffffffffffffffffffffffffffffffffffffff1614612144576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161213b90614dd5565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663546cfd348585856040518463ffffffff1660e01b81526004016121a293929190614e5b565b5f604051808303815f875af11580156121bd573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906121e59190614f29565b505f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d7455301866040518263ffffffff1660e01b81526004016122419190614092565b6020604051808303815f875af115801561225d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122819190614a27565b905060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d934b4428684602001516040015184866040015160200151602001516040518563ffffffff1660e01b81526004016122f7949392919061487e565b5f604051808303815f87803b15801561230e575f80fd5b505af1158015612320573d5f803e3d5ffd5b505050505050505050565b612333613718565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036123a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161239890614fba565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61244d613879565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633a83b3e4878787876040518563ffffffff1660e01b81526004016124ae94939291906151b4565b5f604051808303815f875af11580156124c9573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906124f191906144aa565b90505f81602001516040015173ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161490505f82602001516020015173ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614905081806125705750805b6125af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125a69061524a565b60405180910390fd5b81156126f55760055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342e4074e896040518263ffffffff1660e01b815260040161260f9190614092565b6101e0604051808303815f875af115801561262c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906126509190614675565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635559adf289856020015160400151866040015160200151602001516040518463ffffffff1660e01b81526004016126c393929190614849565b5f604051808303815f87803b1580156126da575f80fd5b505af11580156126ec573d5f803e3d5ffd5b50505050612842565b80156128415760055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638462d54e896040518263ffffffff1660e01b81526004016127559190614092565b6101e0604051808303815f875af1158015612772573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906127969190614675565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663245469fc89856020015160200151866060015160200151876040015160400151602001516040518563ffffffff1660e01b8152600401612813949392919061487e565b5f604051808303815f87803b15801561282a575f80fd5b505af115801561283c573d5f803e3d5ffd5b505050505b5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634f9f6fe6896040518263ffffffff1660e01b815260040161289c9190614092565b6101e0604051808303815f875af11580156128b9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906128dd9190614675565b9350505050949350505050565b6128f26134a8565b73ffffffffffffffffffffffffffffffffffffffff1660045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612980576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161297790614b09565b60405180910390fd5b612989816134af565b6129c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129bf90614b71565b60405180910390fd5b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382fd5bac836040518263ffffffff1660e01b8152600401612a239190614092565b5f604051808303815f875af1158015612a3e573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f82011682018060405250810190612a6691906144aa565b90505f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634f9f6fe6846040518263ffffffff1660e01b8152600401612ac39190614092565b6101e0604051808303815f875af1158015612ae0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612b049190614675565b90505f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d7455301856040518263ffffffff1660e01b8152600401612b619190614092565b6020604051808303815f875af1158015612b7d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ba19190614a27565b905060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635dd049fd856040518263ffffffff1660e01b8152600401612bfd9190614092565b5f604051808303815f87803b158015612c14575f80fd5b505af1158015612c26573d5f803e3d5ffd5b5050505060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630b01498d858560200151604001518660200151602001518660200151886060015160200151878a60600151606001516040518863ffffffff1660e01b8152600401612cb49796959493929190615268565b5f604051808303815f87803b158015612ccb575f80fd5b505af1158015612cdd573d5f803e3d5ffd5b5050505050505050565b612cef613718565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612d5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d549061531f565b60405180910390fd5b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b612de8613718565b612df15f613796565b565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef816fd98360026040518363ffffffff1660e01b8152600401612e509291906148d0565b6020604051808303815f875af1158015612e6c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612e90919061492c565b612ecf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ec6906149a1565b60405180910390fd5b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382fd5bac846040518263ffffffff1660e01b8152600401612f2a9190614092565b5f604051808303815f875af1158015612f45573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f82011682018060405250810190612f6d91906144aa565b90503273ffffffffffffffffffffffffffffffffffffffff1681602001516020015173ffffffffffffffffffffffffffffffffffffffff1614612fe5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612fdc90614a09565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637fb9c45f84846040518363ffffffff1660e01b815260040161304192919061533d565b5f604051808303815f87803b158015613058575f80fd5b505af115801561306a573d5f803e3d5ffd5b5050505060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d92aa5984836020015160200151846040015160400151602001518560600151606001516040518563ffffffff1660e01b81526004016130ea949392919061487e565b5f604051808303815f87803b158015613101575f80fd5b505af1158015613113573d5f803e3d5ffd5b5050505060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370bea207826040518263ffffffff1660e01b81526004016131719190615526565b5f604051808303815f87803b158015613188575f80fd5b505af115801561319a573d5f803e3d5ffd5b50505050505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6131fa613718565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603613268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161325f90615590565b60405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f8060159054906101000a900460ff161590508080156132dc575060015f60149054906101000a900460ff1660ff16105b8061330a57506132eb30613857565b158015613309575060015f60149054906101000a900460ff1660ff16145b5b613349576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016133409061561e565b60405180910390fd5b60015f60146101000a81548160ff021916908360ff16021790555080156133855760015f60156101000a81548160ff0219169083151502179055505b61338e8461232b565b61339783612ce7565b6133a082611a0a565b80156133f8575f8060156101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516133ef919061568a565b60405180910390a15b50505050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61342e613718565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361349c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161349390615713565b60405180910390fd5b6134a581613796565b50565b5f33905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef816fd98360046040518363ffffffff1660e01b815260040161350d9291906148d0565b6020604051808303815f875af1158015613529573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061354d919061492c565b61358c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016135839061577b565b60405180910390fd5b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634f9f6fe6846040518263ffffffff1660e01b81526004016135e79190614092565b6101e0604051808303815f875af1158015613604573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136289190614675565b90505f73ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff160361369c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613693906157e3565b60405180910390fd5b3273ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161461370e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016137059061584b565b60405180910390fd5b6001915050919050565b6137206134a8565b73ffffffffffffffffffffffffffffffffffffffff1661373e6131a3565b73ffffffffffffffffffffffffffffffffffffffff1614613794576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161378b906158b3565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b604051806101e001604052805f600a81111561389857613897613e17565b5b81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b61392b81613919565b8114613935575f80fd5b50565b5f8135905061394681613922565b92915050565b5f6020828403121561396157613960613911565b5b5f61396e84828501613938565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6139a082613977565b9050919050565b6139b081613996565b82525050565b5f6020820190506139c95f8301846139a7565b92915050565b6139d881613996565b81146139e2575f80fd5b50565b5f813590506139f3816139cf565b92915050565b5f60208284031215613a0e57613a0d613911565b5b5f613a1b848285016139e5565b91505092915050565b5f805f60608486031215613a3b57613a3a613911565b5b5f613a4886828701613938565b9350506020613a5986828701613938565b9250506040613a6a86828701613938565b9150509250925092565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b613abe82613a78565b810181811067ffffffffffffffff82111715613add57613adc613a88565b5b80604052505050565b5f613aef613908565b9050613afb8282613ab5565b919050565b5f80fd5b5f80fd5b5f67ffffffffffffffff821115613b2257613b21613a88565b5b602082029050602081019050919050565b5f80fd5b5f613b49613b4484613b08565b613ae6565b90508083825260208201905060208402830185811115613b6c57613b6b613b33565b5b835b81811015613b955780613b8188826139e5565b845260208401935050602081019050613b6e565b5050509392505050565b5f82601f830112613bb357613bb2613b04565b5b8135613bc3848260208601613b37565b91505092915050565b5f60808284031215613be157613be0613a74565b5b613beb6080613ae6565b90505f613bfa848285016139e5565b5f830152506020613c0d848285016139e5565b6020830152506040613c21848285016139e5565b604083015250606082013567ffffffffffffffff811115613c4557613c44613b00565b5b613c5184828501613b9f565b60608301525092915050565b5f60408284031215613c7257613c71613a74565b5b613c7c6040613ae6565b90505f613c8b84828501613938565b5f830152506020613c9e84828501613938565b60208301525092915050565b5f6101008284031215613cc057613cbf613a74565b5b613cca6080613ae6565b90505f613cd984828501613c5d565b5f830152506040613cec84828501613c5d565b6020830152506080613d0084828501613c5d565b60408301525060c0613d1484828501613c5d565b60608301525092915050565b5f60808284031215613d3557613d34613a74565b5b613d3f6080613ae6565b90505f613d4e84828501613938565b5f830152506020613d6184828501613938565b6020830152506040613d7584828501613938565b6040830152506060613d8984828501613938565b60608301525092915050565b5f805f806101c08587031215613dae57613dad613911565b5b5f613dbb87828801613938565b945050602085013567ffffffffffffffff811115613ddc57613ddb613915565b5b613de887828801613bcc565b9350506040613df987828801613caa565b925050610140613e0b87828801613d20565b91505092959194509250565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600b8110613e5557613e54613e17565b5b50565b5f819050613e6582613e44565b919050565b5f613e7482613e58565b9050919050565b613e8481613e6a565b82525050565b613e9381613996565b82525050565b613ea281613919565b82525050565b6101e082015f820151613ebd5f850182613e7b565b506020820151613ed06020850182613e8a565b506040820151613ee36040850182613e99565b506060820151613ef66060850182613e99565b506080820151613f096080850182613e99565b5060a0820151613f1c60a0850182613e99565b5060c0820151613f2f60c0850182613e99565b5060e0820151613f4260e0850182613e99565b50610100820151613f57610100850182613e99565b50610120820151613f6c610120850182613e99565b50610140820151613f81610140850182613e99565b50610160820151613f96610160850182613e99565b50610180820151613fab610180850182613e99565b506101a0820151613fc06101a0850182613e99565b506101c0820151613fd56101c0850182613e99565b50505050565b5f6101e082019050613fef5f830184613ea8565b92915050565b5f806040838503121561400b5761400a613911565b5b5f61401885828601613938565b9250506020614029858286016139e5565b9150509250929050565b5f805f6060848603121561404a57614049613911565b5b5f614057868287016139e5565b9350506020614068868287016139e5565b9250506040614079868287016139e5565b9150509250925092565b61408c81613919565b82525050565b5f6020820190506140a55f830184614083565b92915050565b5f80fd5b5f67ffffffffffffffff8211156140c9576140c8613a88565b5b6140d282613a78565b9050602081019050919050565b5f5b838110156140fc5780820151818401526020810190506140e1565b5f8484015250505050565b5f614119614114846140af565b613ae6565b905082815260208101848484011115614135576141346140ab565b5b6141408482856140df565b509392505050565b5f82601f83011261415c5761415b613b04565b5b815161416c848260208601614107565b91505092915050565b5f81519050614183816139cf565b92915050565b5f61419b61419684613b08565b613ae6565b905080838252602082019050602084028301858111156141be576141bd613b33565b5b835b818110156141e757806141d38882614175565b8452602084019350506020810190506141c0565b5050509392505050565b5f82601f83011261420557614204613b04565b5b8151614215848260208601614189565b91505092915050565b5f6080828403121561423357614232613a74565b5b61423d6080613ae6565b90505f61424c84828501614175565b5f83015250602061425f84828501614175565b602083015250604061427384828501614175565b604083015250606082015167ffffffffffffffff81111561429757614296613b00565b5b6142a3848285016141f1565b60608301525092915050565b5f815190506142bd81613922565b92915050565b5f604082840312156142d8576142d7613a74565b5b6142e26040613ae6565b90505f6142f1848285016142af565b5f830152506020614304848285016142af565b60208301525092915050565b5f610100828403121561432657614325613a74565b5b6143306080613ae6565b90505f61433f848285016142c3565b5f830152506040614352848285016142c3565b6020830152506080614366848285016142c3565b60408301525060c061437a848285016142c3565b60608301525092915050565b5f6080828403121561439b5761439a613a74565b5b6143a56080613ae6565b90505f6143b4848285016142af565b5f8301525060206143c7848285016142af565b60208301525060406143db848285016142af565b60408301525060606143ef848285016142af565b60608301525092915050565b5f6101c0828403121561441157614410613a74565b5b61441b6080613ae6565b90505f82015167ffffffffffffffff81111561443a57614439613b00565b5b61444684828501614148565b5f83015250602082015167ffffffffffffffff81111561446957614468613b00565b5b6144758482850161421e565b602083015250604061448984828501614310565b60408301525061014061449e84828501614386565b60608301525092915050565b5f602082840312156144bf576144be613911565b5b5f82015167ffffffffffffffff8111156144dc576144db613915565b5b6144e8848285016143fb565b91505092915050565b600b81106144fd575f80fd5b50565b5f8151905061450e816144f1565b92915050565b5f6101e0828403121561452a57614529613a74565b5b6145356101e0613ae6565b90505f61454484828501614500565b5f83015250602061455784828501614175565b602083015250604061456b848285016142af565b604083015250606061457f848285016142af565b6060830152506080614593848285016142af565b60808301525060a06145a7848285016142af565b60a08301525060c06145bb848285016142af565b60c08301525060e06145cf848285016142af565b60e0830152506101006145e4848285016142af565b610100830152506101206145fa848285016142af565b61012083015250610140614610848285016142af565b61014083015250610160614626848285016142af565b6101608301525061018061463c848285016142af565b610180830152506101a0614652848285016142af565b6101a0830152506101c0614668848285016142af565b6101c08301525092915050565b5f6101e0828403121561468b5761468a613911565b5b5f61469884828501614514565b91505092915050565b5f82825260208201905092915050565b7f4f6e6c79204a43206f72205250000000000000000000000000000000000000005f82015250565b5f6146e5600d836146a1565b91506146f0826146b1565b602082019050919050565b5f6020820190508181035f830152614712816146d9565b9050919050565b7f4e6f7420636f72726563742073746174650000000000000000000000000000005f82015250565b5f61474d6011836146a1565b915061475882614719565b602082019050919050565b5f6020820190508181035f83015261477a81614741565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6147b882613919565b91506147c383613919565b92508282019050808211156147db576147da614781565b5b92915050565b7f4e6f742074696d6564206f7574000000000000000000000000000000000000005f82015250565b5f614815600d836146a1565b9150614820826147e1565b602082019050919050565b5f6020820190508181035f83015261484281614809565b9050919050565b5f60608201905061485c5f830186614083565b61486960208301856139a7565b6148766040830184614083565b949350505050565b5f6080820190506148915f830187614083565b61489e60208301866139a7565b6148ab6040830185614083565b6148b86060830184614083565b95945050505050565b6148ca81613e6a565b82525050565b5f6040820190506148e35f830185614083565b6148f060208301846148c1565b9392505050565b5f8115159050919050565b61490b816148f7565b8114614915575f80fd5b50565b5f8151905061492681614902565b92915050565b5f6020828403121561494157614940613911565b5b5f61494e84828501614918565b91505092915050565b7f526573756c74735375626d6974746564000000000000000000000000000000005f82015250565b5f61498b6010836146a1565b915061499682614957565b602082019050919050565b5f6020820190508181035f8301526149b88161497f565b9050919050565b7f4f6e6c79204a43000000000000000000000000000000000000000000000000005f82015250565b5f6149f36007836146a1565b91506149fe826149bf565b602082019050919050565b5f6020820190508181035f830152614a20816149e7565b9050919050565b5f60208284031215614a3c57614a3b613911565b5b5f614a49848285016142af565b91505092915050565b5f60e082019050614a655f83018a614083565b614a7260208301896139a7565b614a7f60408301886139a7565b614a8c6060830187614083565b614a996080830186614083565b614aa660a0830185614083565b614ab360c0830184614083565b98975050505050505050565b7f4f6e6c79206d6564696174696f6e0000000000000000000000000000000000005f82015250565b5f614af3600e836146a1565b9150614afe82614abf565b602082019050919050565b5f6020820190508181035f830152614b2081614ae7565b9050919050565b7f43616e6e6f74206d6564696174650000000000000000000000000000000000005f82015250565b5f614b5b600e836146a1565b9150614b6682614b27565b602082019050919050565b5f6020820190508181035f830152614b8881614b4f565b9050919050565b5f61010082019050614ba35f83018b614083565b614bb0602083018a6139a7565b614bbd60408301896139a7565b614bca60608301886139a7565b614bd76080830187614083565b614be460a0830186614083565b614bf160c0830185614083565b614bfe60e0830184614083565b9998505050505050505050565b5f60a082019050614c1e5f830188614083565b614c2b60208301876139a7565b614c3860408301866139a7565b614c456060830185614083565b614c526080830184614083565b9695505050505050565b7f4f6e6c79205250206f72204a43000000000000000000000000000000000000005f82015250565b5f614c90600d836146a1565b9150614c9b82614c5c565b602082019050919050565b5f6020820190508181035f830152614cbd81614c84565b9050919050565b5f60c082019050614cd75f830189614083565b614ce460208301886139a7565b614cf160408301876139a7565b614cfe6060830186614083565b614d0b6080830185614083565b614d1860a0830184614083565b979650505050505050565b7f4d6564696174696f6e20616464726573730000000000000000000000000000005f82015250565b5f614d576011836146a1565b9150614d6282614d23565b602082019050919050565b5f6020820190508181035f830152614d8481614d4b565b9050919050565b7f4f6e6c79205250000000000000000000000000000000000000000000000000005f82015250565b5f614dbf6007836146a1565b9150614dca82614d8b565b602082019050919050565b5f6020820190508181035f830152614dec81614db3565b9050919050565b7f4465616c416772656564000000000000000000000000000000000000000000005f82015250565b5f614e27600a836146a1565b9150614e3282614df3565b602082019050919050565b5f6020820190508181035f830152614e5481614e1b565b9050919050565b5f606082019050614e6e5f830186614083565b614e7b6020830185614083565b614e886040830184614083565b949350505050565b5f60608284031215614ea557614ea4613a74565b5b614eaf6060613ae6565b90505f82015167ffffffffffffffff811115614ece57614ecd613b00565b5b614eda84828501614148565b5f83015250602082015167ffffffffffffffff811115614efd57614efc613b00565b5b614f0984828501614148565b6020830152506040614f1d848285016142af565b60408301525092915050565b5f60208284031215614f3e57614f3d613911565b5b5f82015167ffffffffffffffff811115614f5b57614f5a613915565b5b614f6784828501614e90565b91505092915050565b7f53746f72616765206164647265737300000000000000000000000000000000005f82015250565b5f614fa4600f836146a1565b9150614faf82614f70565b602082019050919050565b5f6020820190508181035f830152614fd181614f98565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f61500c8383613e8a565b60208301905092915050565b5f602082019050919050565b5f61502e82614fd8565b6150388185614fe2565b935061504383614ff2565b805f5b8381101561507357815161505a8882615001565b975061506583615018565b925050600181019050615046565b5085935050505092915050565b5f608083015f8301516150955f860182613e8a565b5060208301516150a86020860182613e8a565b5060408301516150bb6040860182613e8a565b50606083015184820360608601526150d38282615024565b9150508091505092915050565b604082015f8201516150f45f850182613e99565b5060208201516151076020850182613e99565b50505050565b61010082015f8201516151225f8501826150e0565b50602082015161513560408501826150e0565b50604082015161514860808501826150e0565b50606082015161515b60c08501826150e0565b50505050565b608082015f8201516151755f850182613e99565b5060208201516151886020850182613e99565b50604082015161519b6040850182613e99565b5060608201516151ae6060850182613e99565b50505050565b5f6101c0820190506151c85f830187614083565b81810360208301526151da8186615080565b90506151e9604083018561510d565b6151f7610140830184615161565b95945050505050565b7f4f6e6c79205250202f204a4300000000000000000000000000000000000000005f82015250565b5f615234600c836146a1565b915061523f82615200565b602082019050919050565b5f6020820190508181035f83015261526181615228565b9050919050565b5f60e08201905061527b5f83018a614083565b61528860208301896139a7565b61529560408301886139a7565b6152a260608301876139a7565b6152af6080830186614083565b6152bc60a0830185614083565b6152c960c0830184614083565b98975050505050505050565b7f5061796d656e74732061646472657373000000000000000000000000000000005f82015250565b5f6153096010836146a1565b9150615314826152d5565b602082019050919050565b5f6020820190508181035f830152615336816152fd565b9050919050565b5f6040820190506153505f830185614083565b61535d60208301846139a7565b9392505050565b5f81519050919050565b5f82825260208201905092915050565b5f61538882615364565b615392818561536e565b93506153a28185602086016140df565b6153ab81613a78565b840191505092915050565b5f608083015f8301516153cb5f860182613e8a565b5060208301516153de6020860182613e8a565b5060408301516153f16040860182613e8a565b50606083015184820360608601526154098282615024565b9150508091505092915050565b61010082015f82015161542b5f8501826150e0565b50602082015161543e60408501826150e0565b50604082015161545160808501826150e0565b50606082015161546460c08501826150e0565b50505050565b608082015f82015161547e5f850182613e99565b5060208201516154916020850182613e99565b5060408201516154a46040850182613e99565b5060608201516154b76060850182613e99565b50505050565b5f6101c083015f8301518482035f8601526154d8828261537e565b915050602083015184820360208601526154f282826153b6565b91505060408301516155076040860182615416565b50606083015161551b61014086018261546a565b508091505092915050565b5f6020820190508181035f83015261553e81846154bd565b905092915050565b7f55736572732061646472657373000000000000000000000000000000000000005f82015250565b5f61557a600d836146a1565b915061558582615546565b602082019050919050565b5f6020820190508181035f8301526155a78161556e565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c7265615f8201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b5f615608602e836146a1565b9150615613826155ae565b604082019050919050565b5f6020820190508181035f830152615635816155fc565b9050919050565b5f819050919050565b5f60ff82169050919050565b5f819050919050565b5f61567461566f61566a8461563c565b615651565b615645565b9050919050565b6156848161565a565b82525050565b5f60208201905061569d5f83018461567b565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f6156fd6026836146a1565b9150615708826156a3565b604082019050919050565b5f6020820190508181035f83015261572a816156f1565b9050919050565b7f526573756c7473436865636b65640000000000000000000000000000000000005f82015250565b5f615765600e836146a1565b915061577082615731565b602082019050919050565b5f6020820190508181035f83015261579281615759565b9050919050565b7f4e6f206d65646961746f720000000000000000000000000000000000000000005f82015250565b5f6157cd600b836146a1565b91506157d882615799565b602082019050919050565b5f6020820190508181035f8301526157fa816157c1565b9050919050565b7f4f6e6c79206d65646961746f72000000000000000000000000000000000000005f82015250565b5f615835600d836146a1565b915061584082615801565b602082019050919050565b5f6020820190508181035f83015261586281615829565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f61589d6020836146a1565b91506158a882615869565b602082019050919050565b5f6020820190508181035f8301526158ca81615891565b905091905056fea2646970667358221220fdff03679b509c1c4cf5fce26bd4f694543b6753cee4fcfcf25b643e2ca66ced64736f6c63430008150033",
}

// ControllerABI is the input ABI used to generate the binding from.
// Deprecated: Use ControllerMetaData.ABI instead.
var ControllerABI = ControllerMetaData.ABI

// ControllerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ControllerMetaData.Bin instead.
var ControllerBin = ControllerMetaData.Bin

// DeployController deploys a new Ethereum contract, binding an instance of Controller to it.
func DeployController(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Controller, error) {
	parsed, err := ControllerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ControllerBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Controller{ControllerCaller: ControllerCaller{contract: contract}, ControllerTransactor: ControllerTransactor{contract: contract}, ControllerFilterer: ControllerFilterer{contract: contract}}, nil
}

// Controller is an auto generated Go binding around an Ethereum contract.
type Controller struct {
	ControllerCaller     // Read-only binding to the contract
	ControllerTransactor // Write-only binding to the contract
	ControllerFilterer   // Log filterer for contract events
}

// ControllerCaller is an auto generated read-only Go binding around an Ethereum contract.
type ControllerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ControllerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ControllerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ControllerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ControllerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ControllerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ControllerSession struct {
	Contract     *Controller       // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ControllerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ControllerCallerSession struct {
	Contract *ControllerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts     // Call options to use throughout this session
}

// ControllerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ControllerTransactorSession struct {
	Contract     *ControllerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// ControllerRaw is an auto generated low-level Go binding around an Ethereum contract.
type ControllerRaw struct {
	Contract *Controller // Generic contract binding to access the raw methods on
}

// ControllerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ControllerCallerRaw struct {
	Contract *ControllerCaller // Generic read-only contract binding to access the raw methods on
}

// ControllerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ControllerTransactorRaw struct {
	Contract *ControllerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewController creates a new instance of Controller, bound to a specific deployed contract.
func NewController(address common.Address, backend bind.ContractBackend) (*Controller, error) {
	contract, err := bindController(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Controller{ControllerCaller: ControllerCaller{contract: contract}, ControllerTransactor: ControllerTransactor{contract: contract}, ControllerFilterer: ControllerFilterer{contract: contract}}, nil
}

// NewControllerCaller creates a new read-only instance of Controller, bound to a specific deployed contract.
func NewControllerCaller(address common.Address, caller bind.ContractCaller) (*ControllerCaller, error) {
	contract, err := bindController(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ControllerCaller{contract: contract}, nil
}

// NewControllerTransactor creates a new write-only instance of Controller, bound to a specific deployed contract.
func NewControllerTransactor(address common.Address, transactor bind.ContractTransactor) (*ControllerTransactor, error) {
	contract, err := bindController(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ControllerTransactor{contract: contract}, nil
}

// NewControllerFilterer creates a new log filterer instance of Controller, bound to a specific deployed contract.
func NewControllerFilterer(address common.Address, filterer bind.ContractFilterer) (*ControllerFilterer, error) {
	contract, err := bindController(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ControllerFilterer{contract: contract}, nil
}

// bindController binds a generic wrapper to an already deployed contract.
func bindController(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ControllerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Controller *ControllerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Controller.Contract.ControllerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Controller *ControllerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Controller.Contract.ControllerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Controller *ControllerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Controller.Contract.ControllerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Controller *ControllerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Controller.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Controller *ControllerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Controller.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Controller *ControllerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Controller.Contract.contract.Transact(opts, method, params...)
}

// GetMediationAddress is a free data retrieval call binding the contract method 0x155329ea.
//
// Solidity: function getMediationAddress() view returns(address)
func (_Controller *ControllerCaller) GetMediationAddress(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Controller.contract.Call(opts, &out, "getMediationAddress")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetMediationAddress is a free data retrieval call binding the contract method 0x155329ea.
//
// Solidity: function getMediationAddress() view returns(address)
func (_Controller *ControllerSession) GetMediationAddress() (common.Address, error) {
	return _Controller.Contract.GetMediationAddress(&_Controller.CallOpts)
}

// GetMediationAddress is a free data retrieval call binding the contract method 0x155329ea.
//
// Solidity: function getMediationAddress() view returns(address)
func (_Controller *ControllerCallerSession) GetMediationAddress() (common.Address, error) {
	return _Controller.Contract.GetMediationAddress(&_Controller.CallOpts)
}

// GetPaymentsAddress is a free data retrieval call binding the contract method 0xd48b1084.
//
// Solidity: function getPaymentsAddress() view returns(address)
func (_Controller *ControllerCaller) GetPaymentsAddress(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Controller.contract.Call(opts, &out, "getPaymentsAddress")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetPaymentsAddress is a free data retrieval call binding the contract method 0xd48b1084.
//
// Solidity: function getPaymentsAddress() view returns(address)
func (_Controller *ControllerSession) GetPaymentsAddress() (common.Address, error) {
	return _Controller.Contract.GetPaymentsAddress(&_Controller.CallOpts)
}

// GetPaymentsAddress is a free data retrieval call binding the contract method 0xd48b1084.
//
// Solidity: function getPaymentsAddress() view returns(address)
func (_Controller *ControllerCallerSession) GetPaymentsAddress() (common.Address, error) {
	return _Controller.Contract.GetPaymentsAddress(&_Controller.CallOpts)
}

// GetStorageAddress is a free data retrieval call binding the contract method 0x393a4d34.
//
// Solidity: function getStorageAddress() view returns(address)
func (_Controller *ControllerCaller) GetStorageAddress(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Controller.contract.Call(opts, &out, "getStorageAddress")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetStorageAddress is a free data retrieval call binding the contract method 0x393a4d34.
//
// Solidity: function getStorageAddress() view returns(address)
func (_Controller *ControllerSession) GetStorageAddress() (common.Address, error) {
	return _Controller.Contract.GetStorageAddress(&_Controller.CallOpts)
}

// GetStorageAddress is a free data retrieval call binding the contract method 0x393a4d34.
//
// Solidity: function getStorageAddress() view returns(address)
func (_Controller *ControllerCallerSession) GetStorageAddress() (common.Address, error) {
	return _Controller.Contract.GetStorageAddress(&_Controller.CallOpts)
}

// GetUsersAddress is a free data retrieval call binding the contract method 0x93dbed3e.
//
// Solidity: function getUsersAddress() view returns(address)
func (_Controller *ControllerCaller) GetUsersAddress(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Controller.contract.Call(opts, &out, "getUsersAddress")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetUsersAddress is a free data retrieval call binding the contract method 0x93dbed3e.
//
// Solidity: function getUsersAddress() view returns(address)
func (_Controller *ControllerSession) GetUsersAddress() (common.Address, error) {
	return _Controller.Contract.GetUsersAddress(&_Controller.CallOpts)
}

// GetUsersAddress is a free data retrieval call binding the contract method 0x93dbed3e.
//
// Solidity: function getUsersAddress() view returns(address)
func (_Controller *ControllerCallerSession) GetUsersAddress() (common.Address, error) {
	return _Controller.Contract.GetUsersAddress(&_Controller.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Controller *ControllerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Controller.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Controller *ControllerSession) Owner() (common.Address, error) {
	return _Controller.Contract.Owner(&_Controller.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Controller *ControllerCallerSession) Owner() (common.Address, error) {
	return _Controller.Contract.Owner(&_Controller.CallOpts)
}

// AcceptResult is a paid mutator transaction binding the contract method 0x172257c7.
//
// Solidity: function acceptResult(uint256 dealId) returns()
func (_Controller *ControllerTransactor) AcceptResult(opts *bind.TransactOpts, dealId *big.Int) (*types.Transaction, error) {
	return _Controller.contract.Transact(opts, "acceptResult", dealId)
}

// AcceptResult is a paid mutator transaction binding the contract method 0x172257c7.
//
// Solidity: function acceptResult(uint256 dealId) returns()
func (_Controller *ControllerSession) AcceptResult(dealId *big.Int) (*types.Transaction, error) {
	return _Controller.Contract.AcceptResult(&_Controller.TransactOpts, dealId)
}

// AcceptResult is a paid mutator transaction binding the contract method 0x172257c7.
//
// Solidity: function acceptResult(uint256 dealId) returns()
func (_Controller *ControllerTransactorSession) AcceptResult(dealId *big.Int) (*types.Transaction, error) {
	return _Controller.Contract.AcceptResult(&_Controller.TransactOpts, dealId)
}

// AddResult is a paid mutator transaction binding the contract method 0x546cfd34.
//
// Solidity: function addResult(uint256 dealId, uint256 resultsId, uint256 instructionCount) returns()
func (_Controller *ControllerTransactor) AddResult(opts *bind.TransactOpts, dealId *big.Int, resultsId *big.Int, instructionCount *big.Int) (*types.Transaction, error) {
	return _Controller.contract.Transact(opts, "addResult", dealId, resultsId, instructionCount)
}

// AddResult is a paid mutator transaction binding the contract method 0x546cfd34.
//
// Solidity: function addResult(uint256 dealId, uint256 resultsId, uint256 instructionCount) returns()
func (_Controller *ControllerSession) AddResult(dealId *big.Int, resultsId *big.Int, instructionCount *big.Int) (*types.Transaction, error) {
	return _Controller.Contract.AddResult(&_Controller.TransactOpts, dealId, resultsId, instructionCount)
}

// AddResult is a paid mutator transaction binding the contract method 0x546cfd34.
//
// Solidity: function addResult(uint256 dealId, uint256 resultsId, uint256 instructionCount) returns()
func (_Controller *ControllerTransactorSession) AddResult(dealId *big.Int, resultsId *big.Int, instructionCount *big.Int) (*types.Transaction, error) {
	return _Controller.Contract.AddResult(&_Controller.TransactOpts, dealId, resultsId, instructionCount)
}

// Agree is a paid mutator transaction binding the contract method 0x5a665355.
//
// Solidity: function agree(uint256 dealId, (address,address,address,address[]) members, ((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256)) timeouts, (uint256,uint256,uint256,uint256) pricing) returns((uint8,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))
func (_Controller *ControllerTransactor) Agree(opts *bind.TransactOpts, dealId *big.Int, members SharedStructsDealMembers, timeouts SharedStructsDealTimeouts, pricing SharedStructsDealPricing) (*types.Transaction, error) {
	return _Controller.contract.Transact(opts, "agree", dealId, members, timeouts, pricing)
}

// Agree is a paid mutator transaction binding the contract method 0x5a665355.
//
// Solidity: function agree(uint256 dealId, (address,address,address,address[]) members, ((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256)) timeouts, (uint256,uint256,uint256,uint256) pricing) returns((uint8,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))
func (_Controller *ControllerSession) Agree(dealId *big.Int, members SharedStructsDealMembers, timeouts SharedStructsDealTimeouts, pricing SharedStructsDealPricing) (*types.Transaction, error) {
	return _Controller.Contract.Agree(&_Controller.TransactOpts, dealId, members, timeouts, pricing)
}

// Agree is a paid mutator transaction binding the contract method 0x5a665355.
//
// Solidity: function agree(uint256 dealId, (address,address,address,address[]) members, ((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256)) timeouts, (uint256,uint256,uint256,uint256) pricing) returns((uint8,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))
func (_Controller *ControllerTransactorSession) Agree(dealId *big.Int, members SharedStructsDealMembers, timeouts SharedStructsDealTimeouts, pricing SharedStructsDealPricing) (*types.Transaction, error) {
	return _Controller.Contract.Agree(&_Controller.TransactOpts, dealId, members, timeouts, pricing)
}

// CheckResult is a paid mutator transaction binding the contract method 0x7fb9c45f.
//
// Solidity: function checkResult(uint256 dealId, address mediator) returns()
func (_Controller *ControllerTransactor) CheckResult(opts *bind.TransactOpts, dealId *big.Int, mediator common.Address) (*types.Transaction, error) {
	return _Controller.contract.Transact(opts, "checkResult", dealId, mediator)
}

// CheckResult is a paid mutator transaction binding the contract method 0x7fb9c45f.
//
// Solidity: function checkResult(uint256 dealId, address mediator) returns()
func (_Controller *ControllerSession) CheckResult(dealId *big.Int, mediator common.Address) (*types.Transaction, error) {
	return _Controller.Contract.CheckResult(&_Controller.TransactOpts, dealId, mediator)
}

// CheckResult is a paid mutator transaction binding the contract method 0x7fb9c45f.
//
// Solidity: function checkResult(uint256 dealId, address mediator) returns()
func (_Controller *ControllerTransactorSession) CheckResult(dealId *big.Int, mediator common.Address) (*types.Transaction, error) {
	return _Controller.Contract.CheckResult(&_Controller.TransactOpts, dealId, mediator)
}

// Initialize is a paid mutator transaction binding the contract method 0xc0c53b8b.
//
// Solidity: function initialize(address _storageAddress, address _paymentsAddress, address _mediationAddress) returns()
func (_Controller *ControllerTransactor) Initialize(opts *bind.TransactOpts, _storageAddress common.Address, _paymentsAddress common.Address, _mediationAddress common.Address) (*types.Transaction, error) {
	return _Controller.contract.Transact(opts, "initialize", _storageAddress, _paymentsAddress, _mediationAddress)
}

// Initialize is a paid mutator transaction binding the contract method 0xc0c53b8b.
//
// Solidity: function initialize(address _storageAddress, address _paymentsAddress, address _mediationAddress) returns()
func (_Controller *ControllerSession) Initialize(_storageAddress common.Address, _paymentsAddress common.Address, _mediationAddress common.Address) (*types.Transaction, error) {
	return _Controller.Contract.Initialize(&_Controller.TransactOpts, _storageAddress, _paymentsAddress, _mediationAddress)
}

// Initialize is a paid mutator transaction binding the contract method 0xc0c53b8b.
//
// Solidity: function initialize(address _storageAddress, address _paymentsAddress, address _mediationAddress) returns()
func (_Controller *ControllerTransactorSession) Initialize(_storageAddress common.Address, _paymentsAddress common.Address, _mediationAddress common.Address) (*types.Transaction, error) {
	return _Controller.Contract.Initialize(&_Controller.TransactOpts, _storageAddress, _paymentsAddress, _mediationAddress)
}

// MediationAcceptResult is a paid mutator transaction binding the contract method 0x23a9a862.
//
// Solidity: function mediationAcceptResult(uint256 dealId) returns()
func (_Controller *ControllerTransactor) MediationAcceptResult(opts *bind.TransactOpts, dealId *big.Int) (*types.Transaction, error) {
	return _Controller.contract.Transact(opts, "mediationAcceptResult", dealId)
}

// MediationAcceptResult is a paid mutator transaction binding the contract method 0x23a9a862.
//
// Solidity: function mediationAcceptResult(uint256 dealId) returns()
func (_Controller *ControllerSession) MediationAcceptResult(dealId *big.Int) (*types.Transaction, error) {
	return _Controller.Contract.MediationAcceptResult(&_Controller.TransactOpts, dealId)
}

// MediationAcceptResult is a paid mutator transaction binding the contract method 0x23a9a862.
//
// Solidity: function mediationAcceptResult(uint256 dealId) returns()
func (_Controller *ControllerTransactorSession) MediationAcceptResult(dealId *big.Int) (*types.Transaction, error) {
	return _Controller.Contract.MediationAcceptResult(&_Controller.TransactOpts, dealId)
}

// MediationRejectResult is a paid mutator transaction binding the contract method 0x5dd049fd.
//
// Solidity: function mediationRejectResult(uint256 dealId) returns()
func (_Controller *ControllerTransactor) MediationRejectResult(opts *bind.TransactOpts, dealId *big.Int) (*types.Transaction, error) {
	return _Controller.contract.Transact(opts, "mediationRejectResult", dealId)
}

// MediationRejectResult is a paid mutator transaction binding the contract method 0x5dd049fd.
//
// Solidity: function mediationRejectResult(uint256 dealId) returns()
func (_Controller *ControllerSession) MediationRejectResult(dealId *big.Int) (*types.Transaction, error) {
	return _Controller.Contract.MediationRejectResult(&_Controller.TransactOpts, dealId)
}

// MediationRejectResult is a paid mutator transaction binding the contract method 0x5dd049fd.
//
// Solidity: function mediationRejectResult(uint256 dealId) returns()
func (_Controller *ControllerTransactorSession) MediationRejectResult(dealId *big.Int) (*types.Transaction, error) {
	return _Controller.Contract.MediationRejectResult(&_Controller.TransactOpts, dealId)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Controller *ControllerTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Controller.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Controller *ControllerSession) RenounceOwnership() (*types.Transaction, error) {
	return _Controller.Contract.RenounceOwnership(&_Controller.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Controller *ControllerTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _Controller.Contract.RenounceOwnership(&_Controller.TransactOpts)
}

// SetMediationAddress is a paid mutator transaction binding the contract method 0x43391cca.
//
// Solidity: function setMediationAddress(address _mediationAddress) returns()
func (_Controller *ControllerTransactor) SetMediationAddress(opts *bind.TransactOpts, _mediationAddress common.Address) (*types.Transaction, error) {
	return _Controller.contract.Transact(opts, "setMediationAddress", _mediationAddress)
}

// SetMediationAddress is a paid mutator transaction binding the contract method 0x43391cca.
//
// Solidity: function setMediationAddress(address _mediationAddress) returns()
func (_Controller *ControllerSession) SetMediationAddress(_mediationAddress common.Address) (*types.Transaction, error) {
	return _Controller.Contract.SetMediationAddress(&_Controller.TransactOpts, _mediationAddress)
}

// SetMediationAddress is a paid mutator transaction binding the contract method 0x43391cca.
//
// Solidity: function setMediationAddress(address _mediationAddress) returns()
func (_Controller *ControllerTransactorSession) SetMediationAddress(_mediationAddress common.Address) (*types.Transaction, error) {
	return _Controller.Contract.SetMediationAddress(&_Controller.TransactOpts, _mediationAddress)
}

// SetPaymentsAddress is a paid mutator transaction binding the contract method 0x640e570f.
//
// Solidity: function setPaymentsAddress(address _paymentsAddress) returns()
func (_Controller *ControllerTransactor) SetPaymentsAddress(opts *bind.TransactOpts, _paymentsAddress common.Address) (*types.Transaction, error) {
	return _Controller.contract.Transact(opts, "setPaymentsAddress", _paymentsAddress)
}

// SetPaymentsAddress is a paid mutator transaction binding the contract method 0x640e570f.
//
// Solidity: function setPaymentsAddress(address _paymentsAddress) returns()
func (_Controller *ControllerSession) SetPaymentsAddress(_paymentsAddress common.Address) (*types.Transaction, error) {
	return _Controller.Contract.SetPaymentsAddress(&_Controller.TransactOpts, _paymentsAddress)
}

// SetPaymentsAddress is a paid mutator transaction binding the contract method 0x640e570f.
//
// Solidity: function setPaymentsAddress(address _paymentsAddress) returns()
func (_Controller *ControllerTransactorSession) SetPaymentsAddress(_paymentsAddress common.Address) (*types.Transaction, error) {
	return _Controller.Contract.SetPaymentsAddress(&_Controller.TransactOpts, _paymentsAddress)
}

// SetStorageAddress is a paid mutator transaction binding the contract method 0x59b910d6.
//
// Solidity: function setStorageAddress(address _storageAddress) returns()
func (_Controller *ControllerTransactor) SetStorageAddress(opts *bind.TransactOpts, _storageAddress common.Address) (*types.Transaction, error) {
	return _Controller.contract.Transact(opts, "setStorageAddress", _storageAddress)
}

// SetStorageAddress is a paid mutator transaction binding the contract method 0x59b910d6.
//
// Solidity: function setStorageAddress(address _storageAddress) returns()
func (_Controller *ControllerSession) SetStorageAddress(_storageAddress common.Address) (*types.Transaction, error) {
	return _Controller.Contract.SetStorageAddress(&_Controller.TransactOpts, _storageAddress)
}

// SetStorageAddress is a paid mutator transaction binding the contract method 0x59b910d6.
//
// Solidity: function setStorageAddress(address _storageAddress) returns()
func (_Controller *ControllerTransactorSession) SetStorageAddress(_storageAddress common.Address) (*types.Transaction, error) {
	return _Controller.Contract.SetStorageAddress(&_Controller.TransactOpts, _storageAddress)
}

// SetUsersAddress is a paid mutator transaction binding the contract method 0xbbfff47d.
//
// Solidity: function setUsersAddress(address _usersAddress) returns()
func (_Controller *ControllerTransactor) SetUsersAddress(opts *bind.TransactOpts, _usersAddress common.Address) (*types.Transaction, error) {
	return _Controller.contract.Transact(opts, "setUsersAddress", _usersAddress)
}

// SetUsersAddress is a paid mutator transaction binding the contract method 0xbbfff47d.
//
// Solidity: function setUsersAddress(address _usersAddress) returns()
func (_Controller *ControllerSession) SetUsersAddress(_usersAddress common.Address) (*types.Transaction, error) {
	return _Controller.Contract.SetUsersAddress(&_Controller.TransactOpts, _usersAddress)
}

// SetUsersAddress is a paid mutator transaction binding the contract method 0xbbfff47d.
//
// Solidity: function setUsersAddress(address _usersAddress) returns()
func (_Controller *ControllerTransactorSession) SetUsersAddress(_usersAddress common.Address) (*types.Transaction, error) {
	return _Controller.Contract.SetUsersAddress(&_Controller.TransactOpts, _usersAddress)
}

// TimeoutAgree is a paid mutator transaction binding the contract method 0x11d6adc4.
//
// Solidity: function timeoutAgree(uint256 dealId) returns()
func (_Controller *ControllerTransactor) TimeoutAgree(opts *bind.TransactOpts, dealId *big.Int) (*types.Transaction, error) {
	return _Controller.contract.Transact(opts, "timeoutAgree", dealId)
}

// TimeoutAgree is a paid mutator transaction binding the contract method 0x11d6adc4.
//
// Solidity: function timeoutAgree(uint256 dealId) returns()
func (_Controller *ControllerSession) TimeoutAgree(dealId *big.Int) (*types.Transaction, error) {
	return _Controller.Contract.TimeoutAgree(&_Controller.TransactOpts, dealId)
}

// TimeoutAgree is a paid mutator transaction binding the contract method 0x11d6adc4.
//
// Solidity: function timeoutAgree(uint256 dealId) returns()
func (_Controller *ControllerTransactorSession) TimeoutAgree(dealId *big.Int) (*types.Transaction, error) {
	return _Controller.Contract.TimeoutAgree(&_Controller.TransactOpts, dealId)
}

// TimeoutJudgeResult is a paid mutator transaction binding the contract method 0x54278567.
//
// Solidity: function timeoutJudgeResult(uint256 dealId) returns()
func (_Controller *ControllerTransactor) TimeoutJudgeResult(opts *bind.TransactOpts, dealId *big.Int) (*types.Transaction, error) {
	return _Controller.contract.Transact(opts, "timeoutJudgeResult", dealId)
}

// TimeoutJudgeResult is a paid mutator transaction binding the contract method 0x54278567.
//
// Solidity: function timeoutJudgeResult(uint256 dealId) returns()
func (_Controller *ControllerSession) TimeoutJudgeResult(dealId *big.Int) (*types.Transaction, error) {
	return _Controller.Contract.TimeoutJudgeResult(&_Controller.TransactOpts, dealId)
}

// TimeoutJudgeResult is a paid mutator transaction binding the contract method 0x54278567.
//
// Solidity: function timeoutJudgeResult(uint256 dealId) returns()
func (_Controller *ControllerTransactorSession) TimeoutJudgeResult(dealId *big.Int) (*types.Transaction, error) {
	return _Controller.Contract.TimeoutJudgeResult(&_Controller.TransactOpts, dealId)
}

// TimeoutMediateResult is a paid mutator transaction binding the contract method 0x35a7e268.
//
// Solidity: function timeoutMediateResult(uint256 dealId) returns()
func (_Controller *ControllerTransactor) TimeoutMediateResult(opts *bind.TransactOpts, dealId *big.Int) (*types.Transaction, error) {
	return _Controller.contract.Transact(opts, "timeoutMediateResult", dealId)
}

// TimeoutMediateResult is a paid mutator transaction binding the contract method 0x35a7e268.
//
// Solidity: function timeoutMediateResult(uint256 dealId) returns()
func (_Controller *ControllerSession) TimeoutMediateResult(dealId *big.Int) (*types.Transaction, error) {
	return _Controller.Contract.TimeoutMediateResult(&_Controller.TransactOpts, dealId)
}

// TimeoutMediateResult is a paid mutator transaction binding the contract method 0x35a7e268.
//
// Solidity: function timeoutMediateResult(uint256 dealId) returns()
func (_Controller *ControllerTransactorSession) TimeoutMediateResult(dealId *big.Int) (*types.Transaction, error) {
	return _Controller.Contract.TimeoutMediateResult(&_Controller.TransactOpts, dealId)
}

// TimeoutSubmitResult is a paid mutator transaction binding the contract method 0x32ebea04.
//
// Solidity: function timeoutSubmitResult(uint256 dealId) returns()
func (_Controller *ControllerTransactor) TimeoutSubmitResult(opts *bind.TransactOpts, dealId *big.Int) (*types.Transaction, error) {
	return _Controller.contract.Transact(opts, "timeoutSubmitResult", dealId)
}

// TimeoutSubmitResult is a paid mutator transaction binding the contract method 0x32ebea04.
//
// Solidity: function timeoutSubmitResult(uint256 dealId) returns()
func (_Controller *ControllerSession) TimeoutSubmitResult(dealId *big.Int) (*types.Transaction, error) {
	return _Controller.Contract.TimeoutSubmitResult(&_Controller.TransactOpts, dealId)
}

// TimeoutSubmitResult is a paid mutator transaction binding the contract method 0x32ebea04.
//
// Solidity: function timeoutSubmitResult(uint256 dealId) returns()
func (_Controller *ControllerTransactorSession) TimeoutSubmitResult(dealId *big.Int) (*types.Transaction, error) {
	return _Controller.Contract.TimeoutSubmitResult(&_Controller.TransactOpts, dealId)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Controller *ControllerTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _Controller.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Controller *ControllerSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Controller.Contract.TransferOwnership(&_Controller.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Controller *ControllerTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Controller.Contract.TransferOwnership(&_Controller.TransactOpts, newOwner)
}

// ControllerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the Controller contract.
type ControllerInitializedIterator struct {
	Event *ControllerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ControllerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ControllerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ControllerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ControllerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ControllerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ControllerInitialized represents a Initialized event raised by the Controller contract.
type ControllerInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_Controller *ControllerFilterer) FilterInitialized(opts *bind.FilterOpts) (*ControllerInitializedIterator, error) {

	logs, sub, err := _Controller.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ControllerInitializedIterator{contract: _Controller.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_Controller *ControllerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ControllerInitialized) (event.Subscription, error) {

	logs, sub, err := _Controller.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ControllerInitialized)
				if err := _Controller.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_Controller *ControllerFilterer) ParseInitialized(log types.Log) (*ControllerInitialized, error) {
	event := new(ControllerInitialized)
	if err := _Controller.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ControllerOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the Controller contract.
type ControllerOwnershipTransferredIterator struct {
	Event *ControllerOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ControllerOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ControllerOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ControllerOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ControllerOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ControllerOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ControllerOwnershipTransferred represents a OwnershipTransferred event raised by the Controller contract.
type ControllerOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Controller *ControllerFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ControllerOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _Controller.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ControllerOwnershipTransferredIterator{contract: _Controller.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Controller *ControllerFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ControllerOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _Controller.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ControllerOwnershipTransferred)
				if err := _Controller.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Controller *ControllerFilterer) ParseOwnershipTransferred(log types.Log) (*ControllerOwnershipTransferred, error) {
	event := new(ControllerOwnershipTransferred)
	if err := _Controller.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
